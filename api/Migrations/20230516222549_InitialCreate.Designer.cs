// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using rubrixapi.Data;

#nullable disable

namespace rubrixapi.Migrations
{
    [DbContext(typeof(RubrixDBContext))]
    [Migration("20230516222549_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "7.0.4");

            modelBuilder.Entity("rubrixapi.Models.Assessment", b =>
                {
                    b.Property<Guid>("AssessmentID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("AssessmentDescription")
                        .HasColumnType("TEXT");

                    b.Property<int>("AssessmentType")
                        .HasColumnType("INTEGER");

                    b.Property<Guid>("CourseID")
                        .HasColumnType("TEXT");

                    b.Property<Guid>("RubricID")
                        .HasColumnType("TEXT");

                    b.HasKey("AssessmentID");

                    b.ToTable("Assessment");
                });

            modelBuilder.Entity("rubrixapi.Models.Course", b =>
                {
                    b.Property<string>("CourseId")
                        .HasColumnType("TEXT");

                    b.Property<string>("CatalogNbr")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Description")
                        .HasColumnType("TEXT");

                    b.Property<string>("Subject")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("CourseId");

                    b.ToTable("Courses");
                });

            modelBuilder.Entity("rubrixapi.Models.Criteria", b =>
                {
                    b.Property<Guid>("CriteriaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("AwardedFeedback")
                        .HasColumnType("TEXT");

                    b.Property<string>("CriteriaDescription")
                        .HasColumnType("TEXT");

                    b.Property<Guid>("RubricId")
                        .HasColumnType("TEXT");

                    b.Property<string>("SampleFeedback")
                        .HasColumnType("TEXT");

                    b.HasKey("CriteriaId");

                    b.ToTable("RubricCriterias");
                });

            modelBuilder.Entity("rubrixapi.Models.GradeBoundary", b =>
                {
                    b.Property<Guid>("GradeBoundaryID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<Guid>("CriteriaID")
                        .HasColumnType("TEXT");

                    b.Property<string>("GradeBoundaryDesc")
                        .HasColumnType("TEXT");

                    b.Property<string>("GradeBoundaryTitle")
                        .HasColumnType("TEXT");

                    b.Property<int>("MaximumGradeAttainable")
                        .HasColumnType("INTEGER");

                    b.HasKey("GradeBoundaryID");

                    b.ToTable("GradeBoundary");
                });

            modelBuilder.Entity("rubrixapi.Models.Rubric", b =>
                {
                    b.Property<Guid>("RubricId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("CourseId")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Creator")
                        .HasColumnType("TEXT");

                    b.Property<string>("NoteToMarkers")
                        .HasColumnType("TEXT");

                    b.Property<string>("RubricDescription")
                        .HasColumnType("TEXT");

                    b.Property<string>("RubricTitle")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("RubricId");

                    b.ToTable("Rubrics");
                });

            modelBuilder.Entity("rubrixapi.Models.User", b =>
                {
                    b.Property<string>("Username")
                        .HasColumnType("TEXT");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Username");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("rubrixapi.Models.UserRole", b =>
                {
                    b.Property<string>("Username")
                        .HasColumnType("TEXT");

                    b.Property<Guid>("RubricID")
                        .HasColumnType("TEXT");

                    b.Property<int>("Role")
                        .HasColumnType("INTEGER");

                    b.HasKey("Username", "RubricID");

                    b.ToTable("UserRoles");
                });
#pragma warning restore 612, 618
        }
    }
}
